# -*- coding: utf-8 -*-
"""chest_x_ray.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I0xledNrlRwWjD5QBGZhjLwX7sNe_J0a
"""

from google.colab import files
from google.colab import drive

!pip install fastai
!pip install kaggle

files.upload()

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/

!kaggle datasets download -d paultimothymooney/chest-xray-pneumonia

!wget --header="Host: storage.googleapis.com" --header="User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36" --header="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8" "https://storage.googleapis.com/kaggle-datasets/5839/18613/data.zip?GoogleAccessId=web-data@kaggle-161607.iam.gserviceaccount.com&Expires=1551615113&Signature=SjEu8PbMbXzvAw%2BxhyPZNUuPosIAelSnNrjTqBzLQp0A2tS3dlDNqPAvhk7B4i3BKczq1uHeLJBQXAeF8Qv6qxKvSigTNqUuZZZlM8GAP8W9DXfVKo3QcGL7reageaPa98HmdiJnLmdFLEYRuGQp8qSjw82d4%2BtnSphLTJirpV7zH9zcKGrTDuJOdjJ1dadhUh7wrxUeFSfVyquvt0zV6hRYDDM%2FOAjl9ehGiOvbWz8Tr7ldo9pTUNNmZrep9WCpUqYmDMzRqfEIipjz%2FgicO0tIHzZe%2FhwobG5H72Y47I3cuLjQgO1RjKSSE6%2BpGgdoYZ1vvy5Miop1PFBfa1ajTQ%3D%3D" -O "data.zip" -c

!ls

!mkdir data
!unzip data.zip -d data

!rm data.zip

!ls 'data'

!mkdir xray

!cd xray

!unzip -q data/images_001.zip -d xray
!unzip -q data/images_002.zip -d xray
!unzip -q data/images_003.zip -d xray
!unzip -q data/images_004.zip -d xray
!unzip -q data/images_005.zip -d xray
!unzip -q data/images_006.zip -d xray
!unzip -q data/images_007.zip -d xray
!unzip -q data/images_008.zip -d xray
!unzip -q data/images_009.zip -d xray
!unzip -q data/images_010.zip -d xray
!unzip -q data/images_011.zip -d xray
!unzip -q data/images_012.zip -d xray

!rm data/*.zip

! ls 'xray/images'

from fastai.vision import *

df = pd.read_csv('data/Data_Entry_2017.csv')[['Image Index', 'Finding Labels']]

df.columns = ['name', 'label']

df.tail()

ds_tfms=get_transforms(do_flip = True)
data = ImageDataBunch.from_df('xray/images', df = df, size=128, ds_tfms = ds_tfms,  label_delim='|').normalize(imagenet_stats)

learn = create_cnn(data, models.densenet121 , metrics=[accuracy])

learn.lr_find()

learn.recorder.plot()

learn.fit_one_cycle(15, slice(1.10E-06, 1.40E-06))

interp = ClassificationInterpretation.from_learner(learn)
interp.plot_confusion_matrix()

